<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" dir="./gui" filename="RFontChooserWidget.h"><comment type="block">/**
 * Copyright (c) 2011-2018 by Andrew Mustun. All rights reserved.
 * 
 * This file is part of the QCAD project.
 *
 * QCAD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCAD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QCAD.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_RFONTCHOOSERWIDGET_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>_RFONTCHOOSERWIDGET_H_</name></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gui_global.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QComboBox&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QFont&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QFontComboBox&gt;</cpp:file></cpp:include>

<class_decl>class <name>QLabel</name>;</class_decl>

<comment type="block">/**
 * \scriptable
 * \ingroup gui
 */</comment>
<class>class <macro><name>QCADGUI_EXPORT</name></macro> <name>RFontChooserWidget</name><super>: <specifier>public</specifier> <name>QWidget</name></super> <block>{<private type="default">

<function_decl><type><name>Q_OBJECT</name></type>
<name>Q_PROPERTY</name><parameter_list>(<param><decl><type><name>QString</name> <name>label</name> <name>READ</name> <name>getLabel</name> <name>WRITE</name></type> <name>setLabel</name></decl></param>)</parameter_list>;</function_decl>
<constructor_decl><name>Q_PROPERTY</name><parameter_list>(<param><decl><type><name>QFont</name> <name>chosenFont</name> <name>READ</name> <name>getChosenFont</name> <name>WRITE</name></type> <name>setChosenFont</name></decl></param>)</parameter_list>;</constructor_decl>

</private><public>public:
    <constructor_decl><name>RFontChooserWidget</name><parameter_list>(<param><decl><type><name>QWidget</name>*</type> <name>parent</name> =<init> <expr>0</expr></init></decl></param>)</parameter_list>;</constructor_decl>

    <function_decl><type><name>QFont</name></type> <name>getChosenFont</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>
    <function_decl><type><name>void</name></type> <name>setChosenFont</name><parameter_list>(<param><decl><type><name>const</name> <name>QFont</name>&amp;</type> <name>font</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name>int</name></type> <name>getSize</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>
    <function_decl><type><name>void</name></type> <name>setSize</name><parameter_list>(<param><decl><type><name>int</name></type> <name>size</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name>QString</name></type> <name>getLabel</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>
    <function_decl><type><name>void</name></type> <name>setLabel</name><parameter_list>(<param><decl><type><name>const</name> <name>QString</name>&amp;</type> <name>l</name></decl></param>)</parameter_list>;</function_decl>

<label><name>signals</name>:</label>
    <function_decl><type><name>void</name></type> <name>valueChanged</name><parameter_list>(<param><decl><type><name>const</name> <name>QFont</name>&amp;</type> <name>font</name></decl></param>)</parameter_list>;</function_decl>

</public><public>public slots:
    <function_decl><type><name>void</name></type> <name>chosenFontChanged</name><parameter_list>(<param><decl><type><name>const</name> <name>QFont</name>&amp;</type> <name>font</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name>void</name></type> <name>sizeChanged</name><parameter_list>(<param><decl><type><name>int</name></type> <name>index</name></decl></param>)</parameter_list>;</function_decl>

</public><protected>protected:
    <function_decl><type><name>void</name></type> <name>resizeEvent</name><parameter_list>(<param><decl><type><name>QResizeEvent</name>*</type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

</protected><private>private:
    <function_decl><type><name>void</name></type> <name>updateSizeCombo</name><parameter_list>()</parameter_list>;</function_decl>

</private><private>private:
    <decl_stmt><decl><type><name>QFont</name></type> <name>chosenFont</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QComboBox</name>*</type> <name>cbSize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QFontComboBox</name>*</type> <name>cbChosenFont</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QLabel</name>*</type> <name>lbSampleText</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>QLabel</name>*</type> <name>lbLabel</name></decl>;</decl_stmt>
</private>}</block>;</class>

<macro><name>Q_DECLARE_METATYPE</name><argument_list>(<argument>RFontChooserWidget*</argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
