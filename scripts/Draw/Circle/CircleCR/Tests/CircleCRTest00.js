// Auto generated by Testing Dashboard
// File        : scripts/Draw/Circle/CircleCR/Tests/CircleCRTest00.js
// Timestamp   : 2015-03-05 13:15:54
// Description : 

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function CircleCRTest00() {
    TdbTest.call(this, 'scripts/Draw/Circle/CircleCR/Tests/CircleCRTest00.js');
}

CircleCRTest00.prototype = new TdbTest();

CircleCRTest00.prototype.test00 = function() {
    qDebug('running CircleCRTest00.test00()...');
    this.setUp();
    TdbTest.clickOnWidget('MainWindow::CadToolBar::MainToolsPanel::CircleToolsPanelButton');
    TdbTest.clickOnWidget('MainWindow::CadToolBar::CircleToolsPanel::CircleCRButton');
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '0');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(0.2, 30.1);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '1');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(15, 30.2);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '2');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(29.8, 30);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '3');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(0.2, 14.7);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '4');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(14.8, 15.4);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '5');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(29.9, 14.6);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '6');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(0.1, 0.1);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '7');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(15, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '5');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '8');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(29.6, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    var p = new RVector(37.4, 14.3);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    this.tearDown();
    qDebug('finished CircleCRTest00.test00()');
};

