// Auto generated by Testing Dashboard
// File        : scripts/Draw/Circle/CircleCR/Tests/CircleCRTest01.js
// Timestamp   : 2015-03-05 13:18:57
// Description : 

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function CircleCRTest01() {
    TdbTest.call(this, 'scripts/Draw/Circle/CircleCR/Tests/CircleCRTest01.js');
}

CircleCRTest01.prototype = new TdbTest();

CircleCRTest01.prototype.test00 = function() {
    qDebug('running CircleCRTest01.test00()...');
    this.setUp();
    TdbTest.clickOnWidget('MainWindow::CadToolBar::MainToolsPanel::CircleToolsPanelButton');
    TdbTest.clickOnWidget('MainWindow::CadToolBar::CircleToolsPanel::CircleCRButton');
    this.setToolOption('CircleCR/Radius', '2');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '4');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(10.1, 19.6);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '4');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '4');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(16, 19.7);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('CircleCR/Radius', '6');
    this.setToolOption('CircleCR/Angle', '0');
    this.setToolOption('CircleCR/ReferencePoint', '4');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(26, 19.8);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    var p = new RVector(28.4, 8.5);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    var p = new RVector(27, 7.5);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    this.tearDown();
    qDebug('finished CircleCRTest01.test00()');
};

