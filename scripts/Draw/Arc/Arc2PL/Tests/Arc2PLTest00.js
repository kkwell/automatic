// Auto generated by Testing Dashboard
// File        : scripts/Draw/Arc/Arc2PL/Tests/Arc2PLTest00.js
// Timestamp   : 2015-08-14 12:37:06
// Description : 

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function Arc2PLTest00() {
    TdbTest.call(this, 'scripts/Draw/Arc/Arc2PL/Tests/Arc2PLTest00.js');
}

Arc2PLTest00.prototype = new TdbTest();

Arc2PLTest00.prototype.test00 = function() {
    qDebug('running Arc2PLTest00.test00()...');
    this.setUp();
    TdbTest.clickOnWidget('MainWindow::CadToolBar::MainToolsPanel::ArcToolsPanelButton');
    TdbTest.clickOnWidget('MainWindow::CadToolBar::ArcToolsPanel::Arc2PLButton');
    this.setToolOption('Arc2PL/Length', '100');
    this.setToolOption('Arc2PL/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setToolOption('Arc2PL/Length', '100');
    this.setToolOption('Arc2PL/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(20.1, 9.9);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(10.1, 10.3);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Arc2PL/Length', '50');
    this.setToolOption('Arc2PL/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setToolOption('Arc2PL/Length', '50');
    this.setToolOption('Arc2PL/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(19.7, 10.4);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(10, 10.7);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Arc2PL/Length', '12');
    this.setToolOption('Arc2PL/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setToolOption('Arc2PL/Length', '12');
    this.setToolOption('Arc2PL/Direction', 'CounterClockwise');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(20.3, 10.5);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(10, 10.2);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Arc2PL/Length', '12');
    this.setToolOption('Arc2PL/Direction', 'Clockwise');
    this.updateToolOptions();
    this.setToolOption('Arc2PL/Length', '12');
    this.setToolOption('Arc2PL/Direction', 'Clockwise');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(19.6, 9.9);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(10.6, 9.8);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Arc2PL/Length', '50');
    this.setToolOption('Arc2PL/Direction', 'Clockwise');
    this.updateToolOptions();
    TdbTest.clickOnWidget('MainWindow::CadToolBar::SnapToolsPanel::SnapGridButton');
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(19.8, 10.1);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(10, 10.2);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setToolOption('Arc2PL/Length', '100');
    this.setToolOption('Arc2PL/Direction', 'Clockwise');
    this.updateToolOptions();
    this.setToolOption('Arc2PL/Length', '100');
    this.setToolOption('Arc2PL/Direction', 'Clockwise');
    this.updateToolOptions();
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(20.2, 10.1);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(10, new RVector(5, 5, 0, true));
    var p = new RVector(9.5, 9.8);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    var p = new RVector(33.6, 15.4);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    var p = new RVector(-3.2, 10.4);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    this.verifyDrawing('Arc2PLTest00_000.dxf');
    this.tearDown();
    qDebug('finished Arc2PLTest00.test00()');
};

