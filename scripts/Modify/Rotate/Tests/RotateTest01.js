// Auto generated by Testing Dashboard
// File        : scripts/Modify/Rotate/Tests/RotateTest01.js
// Timestamp   : 2016-12-22 10:54:48
// Description : 

include('scripts/Pro/Developer/TestingDashboard/TdbTest.js');

function RotateTest01() {
    TdbTest.call(this, 'scripts/Modify/Rotate/Tests/RotateTest01.js');
}

RotateTest01.prototype = new TdbTest();

RotateTest01.prototype.test00 = function() {
    qDebug('running RotateTest01.test00()...');
    this.setUp();
    this.importFile('scripts/Modify/Rotate/Tests/data/entities.dxf');
    this.selectAll();
    TdbTest.clickOnWidget('MainWindow::CadToolBar::MainToolsPanel::ModifyToolsPanelButton');
    TdbTest.clickOnWidget('MainWindow::CadToolBar::ModifyToolsPanel::RotateButton');
    this.setZoom(2.5712491308276566, new RVector(113.563, -4.04956, 0, true));
    var p = new RVector(101.507083, 98.556153);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.dlgStart();
    this.dlgAppendCode('var map = new Map()');
    this.dlgAppendCode("map.put('DialogOpenedByTdb/Mode', 'KeepOriginal')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/NumberOfCopies', '10')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/Angle', '45.0')");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/AngleByMouse', false)");
    this.dlgAppendCode("map.put('DialogOpenedByTdb/UseCurrentAttributes', false)");
    this.dlgAppendCode("WidgetFactory.restoreState(dialog, 'DialogOpenedByTdb', undefined, false, undefined, map)");
    this.dlgEnd();
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    this.setZoom(2.5712491308276566, new RVector(113.563, -4.04956, 0, true));
    var p = new RVector(67.282473, 65.887206);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.LeftButton, 1, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.LeftButton, 0, 0);
    var p = new RVector(67.282473, 74.832275);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    var p = new RVector(63.004397, 79.499267);
    this.sendMouseEventModelPos(QEvent.MouseButtonPress, p, Qt.RightButton, 2, 0);
    this.sendMouseEventModelPos(QEvent.MouseButtonRelease, p, Qt.RightButton, 0, 0);
    this.verifyDrawing('RotateTest01_000.dxf');
    this.tearDown();
    qDebug('finished RotateTest01.test00()');
};

